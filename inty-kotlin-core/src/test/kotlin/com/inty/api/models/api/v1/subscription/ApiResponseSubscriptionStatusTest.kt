// File generated from our OpenAPI spec by Stainless.

package com.inty.api.models.api.v1.subscription

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.inty.api.core.JsonValue
import com.inty.api.core.jsonMapper
import com.inty.api.models.api.v1.subscription.admin.plans.SubscriptionPlan
import com.inty.api.models.api.v1.subscription.admin.plans.SubscriptionPlanType
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class ApiResponseSubscriptionStatusTest {

    @Test
    fun create() {
        val apiResponseSubscriptionStatus =
            ApiResponseSubscriptionStatus.builder()
                .code(0L)
                .data(
                    ApiResponseSubscriptionStatus.Data.builder()
                        .isSubscribed(true)
                        .subscriptionStatus("subscription_status")
                        .agentCreationLimit(0L)
                        .backgroundGenerationLimitPerDay(0L)
                        .chat24hLimit(0L)
                        .chatLimitPerDay(0L)
                        .addFeatureList(
                            ApiResponseSubscriptionStatus.Data.FeatureList.builder()
                                .description("description")
                                .icon("icon")
                                .key("key")
                                .name("name")
                                .order(0L)
                                .type("type")
                                .enabled(true)
                                .build()
                        )
                        .features(
                            ApiResponseSubscriptionStatus.Data.Features.builder()
                                .putAdditionalProperty("foo", JsonValue.from("bar"))
                                .build()
                        )
                        .hasEverSubscribed(true)
                        .plan(
                            SubscriptionPlan.builder()
                                .id("id")
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .googlePlayProductId("google_play_product_id")
                                .name("name")
                                .planType(SubscriptionPlanType.MONTHLY)
                                .price(0.0)
                                .agentCreationLimit(0L)
                                .backgroundGenerationLimitPerDay(0L)
                                .chatLimitPerDay(0L)
                                .currency("currency")
                                .description("description")
                                .discountRate(0.0)
                                .features(
                                    SubscriptionPlan.Features.builder()
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .build()
                                )
                                .isActive(true)
                                .sortOrder(0L)
                                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .build()
                        )
                        .remainingDays(0L)
                        .subscription(
                            UserSubscription.builder()
                                .id("id")
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .planId("plan_id")
                                .userId("user_id")
                                .autoRenew(true)
                                .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .extraData(
                                    UserSubscription.ExtraData.builder()
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .build()
                                )
                                .googlePlayOrderId("google_play_order_id")
                                .googlePlayPurchaseToken("google_play_purchase_token")
                                .googlePlaySubscriptionId("google_play_subscription_id")
                                .plan(
                                    SubscriptionPlan.builder()
                                        .id("id")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .googlePlayProductId("google_play_product_id")
                                        .name("name")
                                        .planType(SubscriptionPlanType.MONTHLY)
                                        .price(0.0)
                                        .agentCreationLimit(0L)
                                        .backgroundGenerationLimitPerDay(0L)
                                        .chatLimitPerDay(0L)
                                        .currency("currency")
                                        .description("description")
                                        .discountRate(0.0)
                                        .features(
                                            SubscriptionPlan.Features.builder()
                                                .putAdditionalProperty("foo", JsonValue.from("bar"))
                                                .build()
                                        )
                                        .isActive(true)
                                        .sortOrder(0L)
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .status(UserSubscription.Status.ACTIVE)
                                .trialEndDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .build()
                        )
                        .totalChatLimit(0L)
                        .willAutoRenew(true)
                        .build()
                )
                .message("message")
                .build()

        assertThat(apiResponseSubscriptionStatus.code()).isEqualTo(0L)
        assertThat(apiResponseSubscriptionStatus.data())
            .isEqualTo(
                ApiResponseSubscriptionStatus.Data.builder()
                    .isSubscribed(true)
                    .subscriptionStatus("subscription_status")
                    .agentCreationLimit(0L)
                    .backgroundGenerationLimitPerDay(0L)
                    .chat24hLimit(0L)
                    .chatLimitPerDay(0L)
                    .addFeatureList(
                        ApiResponseSubscriptionStatus.Data.FeatureList.builder()
                            .description("description")
                            .icon("icon")
                            .key("key")
                            .name("name")
                            .order(0L)
                            .type("type")
                            .enabled(true)
                            .build()
                    )
                    .features(
                        ApiResponseSubscriptionStatus.Data.Features.builder()
                            .putAdditionalProperty("foo", JsonValue.from("bar"))
                            .build()
                    )
                    .hasEverSubscribed(true)
                    .plan(
                        SubscriptionPlan.builder()
                            .id("id")
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .googlePlayProductId("google_play_product_id")
                            .name("name")
                            .planType(SubscriptionPlanType.MONTHLY)
                            .price(0.0)
                            .agentCreationLimit(0L)
                            .backgroundGenerationLimitPerDay(0L)
                            .chatLimitPerDay(0L)
                            .currency("currency")
                            .description("description")
                            .discountRate(0.0)
                            .features(
                                SubscriptionPlan.Features.builder()
                                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                                    .build()
                            )
                            .isActive(true)
                            .sortOrder(0L)
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                    .remainingDays(0L)
                    .subscription(
                        UserSubscription.builder()
                            .id("id")
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .planId("plan_id")
                            .userId("user_id")
                            .autoRenew(true)
                            .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .extraData(
                                UserSubscription.ExtraData.builder()
                                    .putAdditionalProperty("foo", JsonValue.from("bar"))
                                    .build()
                            )
                            .googlePlayOrderId("google_play_order_id")
                            .googlePlayPurchaseToken("google_play_purchase_token")
                            .googlePlaySubscriptionId("google_play_subscription_id")
                            .plan(
                                SubscriptionPlan.builder()
                                    .id("id")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .googlePlayProductId("google_play_product_id")
                                    .name("name")
                                    .planType(SubscriptionPlanType.MONTHLY)
                                    .price(0.0)
                                    .agentCreationLimit(0L)
                                    .backgroundGenerationLimitPerDay(0L)
                                    .chatLimitPerDay(0L)
                                    .currency("currency")
                                    .description("description")
                                    .discountRate(0.0)
                                    .features(
                                        SubscriptionPlan.Features.builder()
                                            .putAdditionalProperty("foo", JsonValue.from("bar"))
                                            .build()
                                    )
                                    .isActive(true)
                                    .sortOrder(0L)
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .status(UserSubscription.Status.ACTIVE)
                            .trialEndDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                    .totalChatLimit(0L)
                    .willAutoRenew(true)
                    .build()
            )
        assertThat(apiResponseSubscriptionStatus.message()).isEqualTo("message")
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val apiResponseSubscriptionStatus =
            ApiResponseSubscriptionStatus.builder()
                .code(0L)
                .data(
                    ApiResponseSubscriptionStatus.Data.builder()
                        .isSubscribed(true)
                        .subscriptionStatus("subscription_status")
                        .agentCreationLimit(0L)
                        .backgroundGenerationLimitPerDay(0L)
                        .chat24hLimit(0L)
                        .chatLimitPerDay(0L)
                        .addFeatureList(
                            ApiResponseSubscriptionStatus.Data.FeatureList.builder()
                                .description("description")
                                .icon("icon")
                                .key("key")
                                .name("name")
                                .order(0L)
                                .type("type")
                                .enabled(true)
                                .build()
                        )
                        .features(
                            ApiResponseSubscriptionStatus.Data.Features.builder()
                                .putAdditionalProperty("foo", JsonValue.from("bar"))
                                .build()
                        )
                        .hasEverSubscribed(true)
                        .plan(
                            SubscriptionPlan.builder()
                                .id("id")
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .googlePlayProductId("google_play_product_id")
                                .name("name")
                                .planType(SubscriptionPlanType.MONTHLY)
                                .price(0.0)
                                .agentCreationLimit(0L)
                                .backgroundGenerationLimitPerDay(0L)
                                .chatLimitPerDay(0L)
                                .currency("currency")
                                .description("description")
                                .discountRate(0.0)
                                .features(
                                    SubscriptionPlan.Features.builder()
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .build()
                                )
                                .isActive(true)
                                .sortOrder(0L)
                                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .build()
                        )
                        .remainingDays(0L)
                        .subscription(
                            UserSubscription.builder()
                                .id("id")
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .planId("plan_id")
                                .userId("user_id")
                                .autoRenew(true)
                                .endDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .extraData(
                                    UserSubscription.ExtraData.builder()
                                        .putAdditionalProperty("foo", JsonValue.from("bar"))
                                        .build()
                                )
                                .googlePlayOrderId("google_play_order_id")
                                .googlePlayPurchaseToken("google_play_purchase_token")
                                .googlePlaySubscriptionId("google_play_subscription_id")
                                .plan(
                                    SubscriptionPlan.builder()
                                        .id("id")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .googlePlayProductId("google_play_product_id")
                                        .name("name")
                                        .planType(SubscriptionPlanType.MONTHLY)
                                        .price(0.0)
                                        .agentCreationLimit(0L)
                                        .backgroundGenerationLimitPerDay(0L)
                                        .chatLimitPerDay(0L)
                                        .currency("currency")
                                        .description("description")
                                        .discountRate(0.0)
                                        .features(
                                            SubscriptionPlan.Features.builder()
                                                .putAdditionalProperty("foo", JsonValue.from("bar"))
                                                .build()
                                        )
                                        .isActive(true)
                                        .sortOrder(0L)
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                                .startDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .status(UserSubscription.Status.ACTIVE)
                                .trialEndDate(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .build()
                        )
                        .totalChatLimit(0L)
                        .willAutoRenew(true)
                        .build()
                )
                .message("message")
                .build()

        val roundtrippedApiResponseSubscriptionStatus =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(apiResponseSubscriptionStatus),
                jacksonTypeRef<ApiResponseSubscriptionStatus>(),
            )

        assertThat(roundtrippedApiResponseSubscriptionStatus)
            .isEqualTo(apiResponseSubscriptionStatus)
    }
}
